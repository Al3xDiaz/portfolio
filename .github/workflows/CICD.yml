name: CI portafolio

on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - '**'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: portafolio
  WEBHOOK_ID: ${{ secrets.WEBHOOK_ID }}
  WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2
      - name: Set Tags
        id: build
        run: |
          echo "Building image..."
          echo REACT_APP_API_URL="${{ secrets.REACT_APP_API_URL }}" > .env 
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          echo "Change all uppercase to lowercase"
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo "get information about the git: ${{ github.ref_name }}"
          GIT_BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '[A-Z]' '[a-z]')
          GIT_TAG_LATEST=$(echo ${{ github.github_ref }} | tr '[A-Z]' '[a-z]')
          # GIT_TAG_LATEST=$(echo $(git describe --tags --abbrev=0) | tr '[A-Z]' '[a-z]')
          echo "git tag latest: $GIT_TAG_LATEST"

          DOCKER_TAG="latest"
          [[ $GIT_BRANCH_NAME == "main" ]] && DOCKER_TAG="stable"
          echo "set docker tag: $DOCKER_TAG"

      - name: Build image tag
        if: github.ref_type == "tag"
        run: |
          echo "build image"
          docker build portafolio --file portafolio/dockerfile.prod --tag $IMAGE_ID:$GIT_TAG_LATEST --label "runnumber=${GITHUB_RUN_ID}"
      - name: Build image latest
        run: |
          echo "build image"
          docker build portafolio --file portafolio/dockerfile.prod --tag $IMAGE_ID:$DOCKER_TAG --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.CICD_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name:  Push image
        run: |
            # docker push -a $(docker images | grep "$IMAGE_NAME" | awk '{print $1}' | awk 'NR==1')
            docker push ${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
            docker push ${{ env.IMAGE_NAME }}:${{ env.GIT_TAG_LATEST }}