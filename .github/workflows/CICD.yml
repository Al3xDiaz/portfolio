name: CI portafolio

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - '**'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  WEBHOOK_ID: "${{ secrets.WEBHOOK_ID }}"
  WEBHOOK_TOKEN: "${{ secrets.WEBHOOK_TOKEN }}"

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      MajorMinorPatch: ${{ steps.determine-version.outputs.MajorMinorPatch }}
      FullSemVer: ${{ steps.determine-version.outputs.FullSemVer }}
    
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.5.0'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
            useConfigFile: true
      # - uses: actions/checkout@v2
      # - name: Determine Version
      #   run: |
      #     echo "{MajorMinorPatch}=$(gitversion /showvariable MajorMinorPatch)">> $GITHUB_OUTPUT
      #     echo "{FullSemVer}=$(gitversion /showvariable FullSemVer)">> $GITHUB_OUTPUT
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: [calculate-version]

    steps:
      - uses: actions/checkout@v2

      - name: Build portafolio
        run: |
          echo "build image"
          docker build portafolio --file portafolio/Dockerfile.prod --tag ${REGISTRY,,}/portafolio:latest
      - name: Build strapi
        run: |
          echo "build image"
          docker build strapi --file strapi/Dockerfile.prod --tag ${REGISTRY,,}/strapi:latest

      - name: tag docker images
        run: |
          TAG=${{ needs.calculate-version.outputs.MajorMinorPatch }}
          TAG_LONG=${{ needs.calculate-version.outputs.FullSemVer }}
          docker tag ${REGISTRY,,}/portafolio:latest ${REGISTRY,,}/portafolio:$TAG
          docker tag ${REGISTRY,,}/strapi:latest ${REGISTRY,,}/strapi:$TAG
          docker tag ${REGISTRY,,}/portafolio:latest ${REGISTRY,,}/portafolio:$TAG_LONG
          docker tag ${REGISTRY,,}/strapi:latest ${REGISTRY,,}/strapi:$TAG_LONG

      - name: Log in to registry # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.CICD_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Push tag image to registry
        if: github.ref_type == 'tag'
        run: |
          docker push $IMAGE_ID:${{ needs.calculate-version.outputs.MajorMinorPatch }}
          docker push $IMAGE_ID:${{ needs.calculate-version.outputs.FullSemVer }}
          # if branch is master, push image with `latest` tag
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            docker push $IMAGE_ID:latest
          fi
      - name: success
        if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'
      - name: fail
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} pipeline failure.'